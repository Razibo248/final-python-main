name: Build, Test, and Push Docker Image


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1 Checkout 
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3 Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4 Build
      - name: Build the Docker image
        run: docker build . -t razbo/final-python-main:latest

  
      # Step 5 Test
      - name: Test the Docker image
        run: |
          docker run --rm razbo/final-python-main:latest python --version
          
      # Step 6 Push
      - name: Push the Docker image to DockerHub
        run: docker push razbo/final-python-main:latest




      # Step 7 Set up AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3
          # role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          # role-session-name: GitHubActionsSession  

      # Step 8 Update ECS Service
      - name: Update ECS Service
        run: |
          ecs_service_name="final-exam-service"
          ecs_cluster_name="raz-final-exam"
          container_name="final-python-main"
          docker_image="razbo/final-python-main:latest"
          
          aws ecs update-service \
            --cluster $ecs_cluster_name \
            --service $ecs_service_name \
            --force-new-deployment \
            --region eu-west-3
